# Run unit tests from keras2onnx

parameters:
  platform: 'linux'


steps:
- ${{ if eq(parameters.platform, 'linux') }}:
  - script: sudo install -d -m 0777 /home/vsts/.conda/envs
    displayName: Fix Conda permissions

  - task: CondaEnvironment@1
    inputs:
      createCustomEnvironment: true
      environmentName: 'py$(python.version)'
      packageSpecs: 'python=$(python.version)'

  - script: |
      python -m pip install --upgrade pip
      conda config --set always_yes yes --set changeps1 no
      pip install onnxconverter-common
      pip install $(ONNX_PATH)
      pip uninstall -y protobuf
      pip install "protobuf<4.21.0"
      pip install h5py==3.7.0
      pip install parameterized
      pip install timeout-decorator
      pip install coloredlogs flatbuffers
      pip install $(TENSORFLOW_PATH)
      if [[ ! -z $KERAS ]];
      then
        pip install $(KERAS)
      fi
      pip install -r requirements.txt
      pip install -r requirements-dev.txt
      pip install pytest pytest-cov pytest-runner
      $(INSTALL_ORT)
      $(INSTALL_NUMPY)

      pip freeze --all
    displayName: 'Install dependencies'

  - script: |
      pip install -e .
      python -c "import onnxruntime"
      python -c "import onnxconverter_common"
      if [[ ! -z $KERAS ]];
      then
        export TF_KERAS=0
      fi
      pytest tests/keras2onnx_unit_tests --doctest-modules --junitxml=junit/test-results.xml
    displayName: 'pytest'

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/test-results.xml'
      testRunTitle: 'Python $(python.version)'
    condition: succeededOrFailed()

- ${{ if eq(parameters.platform, 'windows') }}:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

  - powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
    displayName: Add conda to PATH

  - script: conda create --yes --quiet --name py$(python.version) -c conda-forge python=$(python.version) numpy protobuf
    displayName: Create Anaconda environment

  - script: |
      call activate py$(python.version)
      python -m pip install --upgrade pip numpy
      echo Test numpy installation... && python -c "import numpy"
      pip install onnxconverter-common
      pip install %ONNX_PATH%
      pip uninstall -y protobuf
      pip install "protobuf<4.21.0"
      pip install h5py==3.7.0
      pip install parameterized
      pip install timeout-decorator
      pip install coloredlogs flatbuffers
      pip install %TENSORFLOW_PATH%
      IF NOT "%KERAS%"=="" (pip install %KERAS%)
      pip install pytest pytest-cov pytest-runner
      %INSTALL_ORT%
      %INSTALL_NUMPY%

      pip freeze --all
    displayName: 'Install dependencies'

  - script: |
      call activate py$(python.version)
      pip install -e .
      echo Test onnxruntime installation... && python -c "import onnxruntime"
      python -c "import onnxconverter_common"
      IF NOT "%KERAS%"=="" (set TF_KERAS=0)
      pytest tests/keras2onnx_unit_tests --doctest-modules --junitxml=junit/test-results.xml
    displayName: 'pytest'

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/test-results.xml'
      testRunTitle: 'Python $(python.version)'
    condition: succeededOrFailed()
