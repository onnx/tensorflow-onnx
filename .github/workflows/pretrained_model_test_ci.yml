name: Pretrained Model Test (CI)

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}-${{ github.event_name == 'workflow_dispatch' }}
  cancel-in-progress: true

jobs:

  Test_min_py_with_min_tf: # Do not change this name because it is used in Ruleset of this repo.
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Tests (Py38-TF2.9-18)
        uses: ./.github/actions/pretrained_model_test
        with:
          os: 'ubuntu-latest'
          tf_version: '2.9.0'
          python_version: '3.8'
          ort_version: '1.16.3'
          onnx_version: '1.16.1'
          opset_version: '18'
          skip_tflite: 'False'

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Test Results (Py38-TF2.9-18-ubuntu)
          path: ./**/test-results-*.xml

  Test_max_py_with_latest_tf: # Do not change this name because it is used in Ruleset of this repo.
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Tests (Py310-TF2.15-18)
        uses: ./.github/actions/pretrained_model_test
        with:
          os: 'ubuntu-latest'
          tf_version: '2.15.0'
          python_version: '3.10'
          ort_version: '1.16.3'
          onnx_version: '1.16.1'
          opset_version: '18'
          skip_tflite: 'False'

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Test Results (Py310-TF2.15-18-ubuntu)
          path: ./**/test-results-*.xml

  Extra_tests:
    strategy:
      fail-fast: false
      matrix:
        name:
          - 'py38-tf2.13'
          - 'py39-tf2.15'
        os: ['ubuntu-latest', 'windows-2022']
        opset_version: ['18', '15']
        ort_version: ['1.16.3']
        onnx_version: ['1.16.1']
        skip_tflite: ['False']
        include:
          - name: 'py38-tf2.13'
            tf_version: '2.13.0'
            python_version: '3.8'
          - name: 'py39-tf2.15'
            tf_version: '2.15.0'
            python_version: '3.9'
          - name: 'py37-tf1.15'
            tf_version: '1.15.5'
            python_version: '3.7'
            os: 'ubuntu-latest'
            opset_version: '15'
            ort_version: '1.14.1'
            onnx_version: '1.14.1'

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Tests (Py${{ matrix.python_version }}_TF${{ matrix.tf_version }}_${{ matrix.os }}_${{ matrix.opset_version }}_${{ matrix.ort_version }}_${{ matrix.skip_tflite }})
        uses: ./.github/actions/pretrained_model_test
        with:
          tf_version: ${{ matrix.tf_version }}
          python_version: ${{ matrix.python_version }}
          ort_version: ${{ matrix.ort_version }}
          onnx_version: ${{ matrix.onnx_version }}
          opset_version: ${{ matrix.opset_version }}
          skip_tflite: ${{ matrix.skip_tflite }}

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Test Results (Py${{ matrix.python_version }}_TF${{ matrix.tf_version }}_${{ matrix.os }}_${{ matrix.opset_version }}_${{ matrix.ort_version }}_${{ matrix.skip_tflite }})
          path: ./**/test-results-*.xml

  publish-test-results:
    name: "Publish Tests Results to Github"
    needs: [Test_min_py_with_min_tf, Test_max_py_with_latest_tf, Extra_tests]
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write
    if: always()
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: "**/pytest*.xml"