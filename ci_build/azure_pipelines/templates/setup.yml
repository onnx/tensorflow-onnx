# Install all dependencies

steps:
- bash: |
    set -ex
    pip install pytest pytest-cov pytest-runner coverage graphviz requests pyyaml pillow pandas parameterized sympy coloredlogs flatbuffers timeout-decorator
    pip install $(CI_PIP_ONNX_NAME)
    pip install $(CI_PIP_ONNX_BACKEND_NAME) numpy

    if [[ $CI_SKIP_TFJS_TESTS == "False" ]] ;
    then
      pip install tensorflowjs==3.18.0
      npm install @tensorflow/tfjs
    fi

    if [[ $CI_TF_VERSION == 2.* ]] ;
    then
      pip install onnxruntime-extensions
      pip install "tensorflow-text<=$(CI_TF_VERSION)"
    fi

    if [[ $CI_ONNXRUNTIME_NIGHTLY == "true" ]] ;
    then
      pip uninstall -y onnxruntime
      # install numpy upfront since it is not on https://test.pypi.org/simple/
      pip install 'numpy>=1.18'
      pip install -i https://aiinfra.pkgs.visualstudio.com/PublicPackages/_packaging/ORT-Nightly/pypi/simple/ ort-nightly
    fi

    pip uninstall -y tensorflow
    pip install $(CI_PIP_TF_NAME)
    pip uninstall -y protobuf
    pip install "protobuf~=3.20"

    python setup.py install

    if [[ $ONNX_TEST ==  "true" ]] ;
    then
      # onnx-weekly won't satisfy onnx requirement so uninstallation must happen here
      pip uninstall -y onnx
      pip install --index-url https://test.pypi.org/simple/ ${PIP_ONNX_NAME:-onnx}
    fi

    pip freeze --all
  displayName: 'Setup Environment'

# TODO: remove later
# Anaconda python 3.6.8 h9f7ef89_1 changed dll lookup logic, numpy fails to load dll on Windows
# https://github.com/numpy/numpy/issues/12957
# https://github.com/ContinuumIO/anaconda-issues/issues/10629
# Add numpy lib path manually here
# On Windows sqlite3.dll is found under Library/bin
- bash: |
    site_dir=$(python -c "import site; print(site.getsitepackages()[1])")
    echo "##vso[task.prependpath]$site_dir\numpy\.libs"
    base_dir=$(python -c "import site; print(site.getsitepackages()[0])")
    echo "##vso[task.prependpath]$base_dir/Library/bin"
  displayName: 'Fix Paths'
  condition: and(succeeded(), in(variables['Agent.OS'], 'Windows_NT'))

- bash: env
  displayName: 'Display Environment Variables'
