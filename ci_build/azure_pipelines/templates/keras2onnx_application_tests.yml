# Run applications tests from keras2onnx

parameters:
  platform: 'linux'


steps:
- ${{ if eq(parameters.platform, 'linux') }}:
  - script: sudo install -d -m 0777 /home/vsts/.conda/envs
    displayName: Fix Conda permissions

  - task: CondaEnvironment@1
    inputs:
      createCustomEnvironment: true
      environmentName: 'py$(python.version)'
      packageSpecs: 'python=$(python.version)'

  - script: |
      python -m pip install --upgrade pip
      conda config --set always_yes yes --set changeps1 no
      pip install onnxconverter-common
      pip install $(ONNX_PATH)
      pip uninstall -y protobuf
      pip install "protobuf<4.21.0"
      pip install h5py==3.7.0
      pip install parameterized
      pip install timeout-decorator
      pip install coloredlogs flatbuffers
      $(INSTALL_TENSORFLOW)
      $(INSTALL_KERAS)
      $(INSTALL_ORT)
      pip install Pillow==8.2.0
      pip install opencv-python
      pip install tqdm
      pip install keras-segmentation==0.2.0
      git clone https://github.com/matterport/Mask_RCNN
      cd Mask_RCNN
      pip install -r requirements.txt
      python setup.py install
      cd ..
      pip install matplotlib
      git clone https://github.com/qqwweee/keras-yolo3
      $(INSTALL_KERAS_RESNET)
      pip install git+https://www.github.com/keras-team/keras-contrib.git
      pip install keras-tcn==2.8.3
      $(UNINSTALL_KERAS)
      pip install git+https://github.com/qubvel/efficientnet
      $(INSTALL_TRANSFORMERS)
      pip install keras-self-attention
      pip install pytest pytest-cov pytest-runner
      $(INSTALL_NUMPY)
      if [[ ! -z $INSTALL_LEGACY ]];
      then
        pip install $(INSTALL_LEGACY)
      fi

      pip freeze --all
    displayName: 'Install dependencies'

  - script: |
      pip install -e .
      python -c "import onnxruntime"
      pytest tests/keras2onnx_unit_tests --doctest-modules --junitxml=junit/test-results.xml
      cd tests/keras2onnx_applications/nightly_build
      $(NIGHTLY_BUILD_TEST)
    displayName: 'pytest'

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/test-results-*.xml'
      testRunTitle: 'Python $(python.version)'
    condition: succeededOrFailed()

- ${{ if eq(parameters.platform, 'windows') }}:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

  - powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
    displayName: Add conda to PATH

  - script: conda create --yes --quiet --name py$(python.version) -c conda-forge python=$(python.version) numpy protobuf
    displayName: Create Anaconda environment

  - script: |
      call activate py$(python.version)
      python -m pip install --upgrade pip numpy
      echo Test numpy installation... && python -c "import numpy"
      pip install onnxconverter-common
      pip install %ONNX_PATH%
      pip uninstall -y protobuf
      pip install "protobuf<4.21.0"
      pip install h5py==3.7.0
      pip install parameterized
      pip install timeout-decorator
      pip install coloredlogs flatbuffers
      %INSTALL_TENSORFLOW%
      %INSTALL_KERAS%
      %INSTALL_ORT%
      pip install Pillow==8.2.0
      pip install opencv-python
      pip install tqdm
      pip install keras-segmentation==0.2.0
      pip install matplotlib
      git clone https://github.com/qqwweee/keras-yolo3
      %INSTALL_KERAS_RESNET%
      pip install git+https://www.github.com/keras-team/keras-contrib.git
      pip install keras-tcn==2.8.3
      %UNINSTALL_KERAS%
      pip install git+https://github.com/qubvel/efficientnet
      %INSTALL_TRANSFORMERS%
      pip install keras-self-attention
      pip install pytest pytest-cov pytest-runner
      %INSTALL_NUMPY%
      IF NOT "%INSTALL_LEGACY%"=="" (pip install %INSTALL_LEGACY%)

      pip freeze --all
    displayName: 'Install dependencies'

  - script: |
      call activate py$(python.version)
      pip install -e .
      echo Test onnxruntime installation... && python -c "import onnxruntime"
      pytest tests/keras2onnx_unit_tests --doctest-modules --junitxml=junit/test-results.xml
      cd tests/keras2onnx_applications/nightly_build
      %NIGHTLY_BUILD_TEST%
    displayName: 'pytest'

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/test-results-*.xml'
      testRunTitle: 'Python $(python.version)'
    condition: succeededOrFailed()
