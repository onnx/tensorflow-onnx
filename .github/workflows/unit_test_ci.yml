name: Unit Test (CI)

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}-${{ github.event_name == 'workflow_dispatch' }}
  cancel-in-progress: true

jobs:

  Test4_py310_tf2_19: # Do not change this name because it is used in Ruleset of this repo.
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Tests (Py310-TF2.19-18)
        uses: ./.github/actions/unit_test
        with:
          os: 'ubuntu-latest'
          tf_version: '2.19.0'
          python_version: '3.10'
          ort_version: '1.20.1'
          onnx_version: '1.17.0'
          opset_version: '18'
          skip_tflite: 'False'

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Test Results (Py310-TF2.19-18-ubuntu)
          path: ./**/test-results-*.xml

  Test4_py311_tf2_19: # Do not change this name because it is used in Ruleset of this repo.
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Tests (Py311-TF2.19-18)
        uses: ./.github/actions/unit_test
        with:
          os: 'ubuntu-latest'
          tf_version: '2.19.0'
          python_version: '3.11'
          ort_version: '1.20.1'
          onnx_version: '1.17.0'
          opset_version: '18'
          skip_tflite: 'False'

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Test Results (Py311-TF2.19-18-ubuntu)
          path: ./**/test-results-*.xml

  Extra_tests4:
    strategy:
      fail-fast: false
      matrix:
        name:
          - 'py312-tf2.19'
        os: ['ubuntu-latest', 'windows-2022']
        opset_version: ['18']
        skip_tflite: ['False']
        include:
          - name: 'py312-tf2.19'
            tf_version: '2.19.0'
            python_version: '3.11'
            ort_version: '1.20.1'
            onnx_version: '1.17.0'

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Tests (Py${{ matrix.python_version }}_TF${{ matrix.tf_version }}_${{ matrix.os }}_${{ matrix.opset_version }}_${{ matrix.ort_version }}_${{ matrix.skip_tflite }})
        uses: ./.github/actions/unit_test
        with:
          tf_version: ${{ matrix.tf_version }}
          python_version: ${{ matrix.python_version }}
          ort_version: ${{ matrix.ort_version }}
          onnx_version: ${{ matrix.onnx_version }}
          opset_version: ${{ matrix.opset_version }}
          skip_tflite: ${{ matrix.skip_tflite }}

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Test Results (Py${{ matrix.python_version }}_TF${{ matrix.tf_version }}_${{ matrix.os }}_${{ matrix.opset_version }}_${{ matrix.ort_version }}_${{ matrix.skip_tflite }})
          path: ./**/test-results-*.xml

  publish-test-results:
    name: "Publish Tests Results to Github"
    needs: [Test4_py310_tf2_19, Test4_py311_tf2_19, Extra_tests4]
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write
    if: always()
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: "artifacts/**/*.xml"