# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

jobs:

- job: 'Test'
  timeoutInMinutes: 180
  pool:
    vmImage: 'Ubuntu-16.04'
  strategy:
    matrix:
      Python36-onnx1.5:
        python.version: '3.6'
        ONNX_PATH: onnx==1.5.0
        INSTALL_KERAS: pip install keras==2.2.4
        UNINSTALL_KERAS:
        INSTALL_TENSORFLOW: pip install tensorflow==1.15.0
        INSTALL_ORT: pip install onnxruntime==1.8.0
        INSTALL_KERAS_RESNET: pip install keras-resnet
        INSTALL_TRANSFORMERS:
        NIGHTLY_BUILD_TEST: python run_all.py --exclude "test_keras_applications_v2.py"

      Python37-onnx1.6:
        python.version: '3.7.3'
        ONNX_PATH: onnx==1.6.0
        INSTALL_KERAS: pip install keras==2.3.1
        UNINSTALL_KERAS:
        INSTALL_TENSORFLOW: pip install tensorflow==1.15.0
        INSTALL_ORT: pip install onnxruntime==1.8.0
        INSTALL_KERAS_RESNET: pip install keras-resnet
        INSTALL_TRANSFORMERS:
        NIGHTLY_BUILD_TEST: python run_all.py --exclude "test_keras_applications_v2.py"

      Python37-onnx1.9:
        python.version: '3.7.3'
        ONNX_PATH: onnx==1.9.0
        INSTALL_KERAS: pip install keras==2.3.1
        UNINSTALL_KERAS:
        INSTALL_TENSORFLOW: pip install tensorflow==1.15.0
        INSTALL_ORT: pip install onnxruntime==1.8.0
        INSTALL_KERAS_RESNET: pip install keras-resnet
        INSTALL_TRANSFORMERS:
        NIGHTLY_BUILD_TEST: python run_all.py --exclude "test_keras_applications_v2.py"

      Python38-tf2:
        python.version: '3.8'
        ONNX_PATH: onnx==1.9.0
        INSTALL_KERAS:
        UNINSTALL_KERAS: pip uninstall keras -y
        INSTALL_TENSORFLOW: pip install tensorflow==2.2.0
        INSTALL_ORT: pip install onnxruntime==1.8.0
        INSTALL_KERAS_RESNET: pip install keras-resnet
        INSTALL_TRANSFORMERS: pip install transformers==3.4.0
        NIGHTLY_BUILD_TEST: python run_all_v2.py

  steps:
  - script: sudo install -d -m 0777 /home/vsts/.conda/envs
    displayName: Fix Conda permissions

  - task: CondaEnvironment@1
    inputs:
      createCustomEnvironment: true
      environmentName: 'py$(python.version)'
      packageSpecs: 'python=$(python.version)'

  - script: |
      python -m pip install --upgrade pip
      conda config --set always_yes yes --set changeps1 no
      pip install $(ONNX_PATH)
      pip install h5py==2.9.0
      pip install numpy==1.19
      pip install parameterized
      $(INSTALL_TENSORFLOW)
      $(INSTALL_KERAS)
      pip install git+https://github.com/microsoft/onnxconverter-common
      $(INSTALL_ORT)
      pip install Pillow==8.2.0
      pip install opencv-python
      pip install tqdm
      pip install keras-segmentation==0.2.0
      git clone https://github.com/matterport/Mask_RCNN
      cd Mask_RCNN
      pip install -r requirements.txt
      python setup.py install
      cd ..
      pip install matplotlib
      git clone https://github.com/qqwweee/keras-yolo3
      $(INSTALL_KERAS_RESNET)
      pip install git+https://www.github.com/keras-team/keras-contrib.git
      pip install keras-tcn==2.8.3
      $(UNINSTALL_KERAS)
      pip install git+https://github.com/qubvel/efficientnet
      $(INSTALL_TRANSFORMERS)
      pip install keras-self-attention
      pip install pytest pytest-cov pytest-runner
    displayName: 'Install dependencies'

  - script: |
      pip install -e .
      python -c "import onnxruntime"
      pytest tests/keras2onnx_unit_tests --doctest-modules --junitxml=junit/test-results.xml
      cd tests/keras2onnx_applications/nightly_build
      $(NIGHTLY_BUILD_TEST)
    displayName: 'pytest'

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/test-results-*.xml'
      testRunTitle: 'Python $(python.version)'
    condition: succeededOrFailed()
