name: Pretrained Model Test (CI)

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  run_tests:
    strategy:
      matrix:
        tf_version: ['2.9.0', '2.13.0']
        python_version: ['3.8', '3.9', '3.10']
        opset_version: ['18', '15']
        ort_version: ['1.16.3']

    runs-on: ubuntu-latest

    steps:
      - name: Set up Python (${{ matrix.python_version }})
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies (TF-v${{ matrix.tf_version }})
        shell: bash
        run: |
          chmod +x ./tests/utils/setup_test_env.sh
          ./tests/utils/setup_test_env.sh ${{ matrix.tf_version }} ${{ matrix.ort_version }}

      - name: Fix Paths (Windows only)
        if: runner.os == 'Windows'
        run: |
          $site_dir = python -c "import site; print(site.getsitepackages()[1])"
          echo "##vso[task.prependpath]$site_dir\numpy\.libs"
          $base_dir = python -c "import site; print(site.getsitepackages()[0])"
          echo "##vso[task.prependpath]$base_dir/Library/bin"

      - name: Run pretrained_model_test
        run: |
          # TODO: fix unity model path
          # python tests/run_pretrained_models.py --backend $CI_ONNX_BACKEND --opset $CI_ONNX_OPSET --config tests/unity.yaml || status=$?
          python tests/run_pretrained_models.py --backend onnxruntime --opset ${{ matrix.opset_version }} --skip_tf_tests False --skip_tflite_tests False --skip_tfjs_tests True --config tests/run_pretrained_models.yaml || status=$?
          ls

  # publish-test-results:
  #   name: "Publish Tests Results to Github"
  #   needs: run_tests
  #   runs-on: ubuntu-latest
  #   permissions:
  #     checks: write
  #     pull-requests: write
  #   if: always()
  #   steps:
  #     - name: Download Artifacts
  #       uses: actions/download-artifact@v3
  #       with:
  #         path: artifacts

  #     - name: Publish Test Results
  #       uses: EnricoMi/publish-unit-test-result-action@v2
  #       with:
  #         files: "**/pytest*.xml"